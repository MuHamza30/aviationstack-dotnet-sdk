// <copyright file="Route.cs" company="APIMatic">
// Aviationstack.Standard
//
// This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
// </copyright>
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using APIMatic.Core.Utilities.Converters;
using Aviationstack.Standard;
using Aviationstack.Standard.Utilities;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Aviationstack.Standard.Models
{
    /// <summary>
    /// Route.
    /// </summary>
    public class Route
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Route"/> class.
        /// </summary>
        public Route()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Route"/> class.
        /// </summary>
        /// <param name="airline">airline.</param>
        /// <param name="departure">departure.</param>
        /// <param name="arrival">arrival.</param>
        public Route(
            Models.AirlineInfo airline = null,
            Models.AirportInfo departure = null,
            Models.AirportInfo arrival = null)
        {
            this.Airline = airline;
            this.Departure = departure;
            this.Arrival = arrival;
        }

        /// <summary>
        /// Gets or sets Airline.
        /// </summary>
        [JsonProperty("airline", NullValueHandling = NullValueHandling.Ignore)]
        public Models.AirlineInfo Airline { get; set; }

        /// <summary>
        /// Gets or sets Departure.
        /// </summary>
        [JsonProperty("departure", NullValueHandling = NullValueHandling.Ignore)]
        public Models.AirportInfo Departure { get; set; }

        /// <summary>
        /// Gets or sets Arrival.
        /// </summary>
        [JsonProperty("arrival", NullValueHandling = NullValueHandling.Ignore)]
        public Models.AirportInfo Arrival { get; set; }

        /// <inheritdoc/>
        public override string ToString()
        {
            var toStringOutput = new List<string>();
            this.ToString(toStringOutput);
            return $"Route : ({string.Join(", ", toStringOutput)})";
        }

        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;

            return obj is Route other &&
                (this.Airline == null && other.Airline == null ||
                 this.Airline?.Equals(other.Airline) == true) &&
                (this.Departure == null && other.Departure == null ||
                 this.Departure?.Equals(other.Departure) == true) &&
                (this.Arrival == null && other.Arrival == null ||
                 this.Arrival?.Equals(other.Arrival) == true);
        }

        /// <summary>
        /// ToString overload.
        /// </summary>
        /// <param name="toStringOutput">List of strings.</param>
        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"Airline = {(this.Airline == null ? "null" : this.Airline.ToString())}");
            toStringOutput.Add($"Departure = {(this.Departure == null ? "null" : this.Departure.ToString())}");
            toStringOutput.Add($"Arrival = {(this.Arrival == null ? "null" : this.Arrival.ToString())}");
        }
    }
}