// <copyright file="Airline.cs" company="APIMatic">
// Aviationstack.Standard
//
// This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
// </copyright>
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using APIMatic.Core.Utilities.Converters;
using Aviationstack.Standard;
using Aviationstack.Standard.Utilities;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Aviationstack.Standard.Models
{
    /// <summary>
    /// Airline.
    /// </summary>
    public class Airline
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Airline"/> class.
        /// </summary>
        public Airline()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Airline"/> class.
        /// </summary>
        /// <param name="airlineName">airline_name.</param>
        /// <param name="iataCode">iata_code.</param>
        /// <param name="icaoCode">icao_code.</param>
        /// <param name="fleetSize">fleet_size.</param>
        /// <param name="fleetAverageAge">fleet_average_age.</param>
        /// <param name="dateFounded">date_founded.</param>
        /// <param name="hubCode">hub_code.</param>
        /// <param name="countryName">country_name.</param>
        /// <param name="countryCode">country_code.</param>
        public Airline(
            string airlineName = null,
            string iataCode = null,
            string icaoCode = null,
            string fleetSize = null,
            string fleetAverageAge = null,
            string dateFounded = null,
            string hubCode = null,
            string countryName = null,
            string countryCode = null)
        {
            this.AirlineName = airlineName;
            this.IataCode = iataCode;
            this.IcaoCode = icaoCode;
            this.FleetSize = fleetSize;
            this.FleetAverageAge = fleetAverageAge;
            this.DateFounded = dateFounded;
            this.HubCode = hubCode;
            this.CountryName = countryName;
            this.CountryCode = countryCode;
        }

        /// <summary>
        /// Name of the airline
        /// </summary>
        [JsonProperty("airline_name", NullValueHandling = NullValueHandling.Ignore)]
        public string AirlineName { get; set; }

        /// <summary>
        /// IATA code of the airline
        /// </summary>
        [JsonProperty("iata_code", NullValueHandling = NullValueHandling.Ignore)]
        public string IataCode { get; set; }

        /// <summary>
        /// ICAO code of the airline
        /// </summary>
        [JsonProperty("icao_code", NullValueHandling = NullValueHandling.Ignore)]
        public string IcaoCode { get; set; }

        /// <summary>
        /// Size of the fleet
        /// </summary>
        [JsonProperty("fleet_size", NullValueHandling = NullValueHandling.Ignore)]
        public string FleetSize { get; set; }

        /// <summary>
        /// Average age of the fleet
        /// </summary>
        [JsonProperty("fleet_average_age", NullValueHandling = NullValueHandling.Ignore)]
        public string FleetAverageAge { get; set; }

        /// <summary>
        /// Date when the airline was founded
        /// </summary>
        [JsonProperty("date_founded", NullValueHandling = NullValueHandling.Ignore)]
        public string DateFounded { get; set; }

        /// <summary>
        /// Hub airport code
        /// </summary>
        [JsonProperty("hub_code", NullValueHandling = NullValueHandling.Ignore)]
        public string HubCode { get; set; }

        /// <summary>
        /// Country name
        /// </summary>
        [JsonProperty("country_name", NullValueHandling = NullValueHandling.Ignore)]
        public string CountryName { get; set; }

        /// <summary>
        /// Country code
        /// </summary>
        [JsonProperty("country_code", NullValueHandling = NullValueHandling.Ignore)]
        public string CountryCode { get; set; }

        /// <inheritdoc/>
        public override string ToString()
        {
            var toStringOutput = new List<string>();
            this.ToString(toStringOutput);
            return $"Airline : ({string.Join(", ", toStringOutput)})";
        }

        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;

            return obj is Airline other &&
                (this.AirlineName == null && other.AirlineName == null ||
                 this.AirlineName?.Equals(other.AirlineName) == true) &&
                (this.IataCode == null && other.IataCode == null ||
                 this.IataCode?.Equals(other.IataCode) == true) &&
                (this.IcaoCode == null && other.IcaoCode == null ||
                 this.IcaoCode?.Equals(other.IcaoCode) == true) &&
                (this.FleetSize == null && other.FleetSize == null ||
                 this.FleetSize?.Equals(other.FleetSize) == true) &&
                (this.FleetAverageAge == null && other.FleetAverageAge == null ||
                 this.FleetAverageAge?.Equals(other.FleetAverageAge) == true) &&
                (this.DateFounded == null && other.DateFounded == null ||
                 this.DateFounded?.Equals(other.DateFounded) == true) &&
                (this.HubCode == null && other.HubCode == null ||
                 this.HubCode?.Equals(other.HubCode) == true) &&
                (this.CountryName == null && other.CountryName == null ||
                 this.CountryName?.Equals(other.CountryName) == true) &&
                (this.CountryCode == null && other.CountryCode == null ||
                 this.CountryCode?.Equals(other.CountryCode) == true);
        }

        /// <summary>
        /// ToString overload.
        /// </summary>
        /// <param name="toStringOutput">List of strings.</param>
        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"AirlineName = {this.AirlineName ?? "null"}");
            toStringOutput.Add($"IataCode = {this.IataCode ?? "null"}");
            toStringOutput.Add($"IcaoCode = {this.IcaoCode ?? "null"}");
            toStringOutput.Add($"FleetSize = {this.FleetSize ?? "null"}");
            toStringOutput.Add($"FleetAverageAge = {this.FleetAverageAge ?? "null"}");
            toStringOutput.Add($"DateFounded = {this.DateFounded ?? "null"}");
            toStringOutput.Add($"HubCode = {this.HubCode ?? "null"}");
            toStringOutput.Add($"CountryName = {this.CountryName ?? "null"}");
            toStringOutput.Add($"CountryCode = {this.CountryCode ?? "null"}");
        }
    }
}