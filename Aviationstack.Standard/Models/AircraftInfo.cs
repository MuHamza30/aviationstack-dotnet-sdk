// <copyright file="AircraftInfo.cs" company="APIMatic">
// Aviationstack.Standard
//
// This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
// </copyright>
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using APIMatic.Core.Utilities.Converters;
using Aviationstack.Standard;
using Aviationstack.Standard.Utilities;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Aviationstack.Standard.Models
{
    /// <summary>
    /// AircraftInfo.
    /// </summary>
    public class AircraftInfo
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AircraftInfo"/> class.
        /// </summary>
        public AircraftInfo()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AircraftInfo"/> class.
        /// </summary>
        /// <param name="registration">registration.</param>
        /// <param name="iata">iata.</param>
        /// <param name="icao">icao.</param>
        /// <param name="model">model.</param>
        public AircraftInfo(
            string registration = null,
            string iata = null,
            string icao = null,
            string model = null)
        {
            this.Registration = registration;
            this.Iata = iata;
            this.Icao = icao;
            this.Model = model;
        }

        /// <summary>
        /// Aircraft registration
        /// </summary>
        [JsonProperty("registration", NullValueHandling = NullValueHandling.Ignore)]
        public string Registration { get; set; }

        /// <summary>
        /// IATA code
        /// </summary>
        [JsonProperty("iata", NullValueHandling = NullValueHandling.Ignore)]
        public string Iata { get; set; }

        /// <summary>
        /// ICAO code
        /// </summary>
        [JsonProperty("icao", NullValueHandling = NullValueHandling.Ignore)]
        public string Icao { get; set; }

        /// <summary>
        /// Aircraft model
        /// </summary>
        [JsonProperty("model", NullValueHandling = NullValueHandling.Ignore)]
        public string Model { get; set; }

        /// <inheritdoc/>
        public override string ToString()
        {
            var toStringOutput = new List<string>();
            this.ToString(toStringOutput);
            return $"AircraftInfo : ({string.Join(", ", toStringOutput)})";
        }

        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;

            return obj is AircraftInfo other &&
                (this.Registration == null && other.Registration == null ||
                 this.Registration?.Equals(other.Registration) == true) &&
                (this.Iata == null && other.Iata == null ||
                 this.Iata?.Equals(other.Iata) == true) &&
                (this.Icao == null && other.Icao == null ||
                 this.Icao?.Equals(other.Icao) == true) &&
                (this.Model == null && other.Model == null ||
                 this.Model?.Equals(other.Model) == true);
        }

        /// <summary>
        /// ToString overload.
        /// </summary>
        /// <param name="toStringOutput">List of strings.</param>
        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"Registration = {this.Registration ?? "null"}");
            toStringOutput.Add($"Iata = {this.Iata ?? "null"}");
            toStringOutput.Add($"Icao = {this.Icao ?? "null"}");
            toStringOutput.Add($"Model = {this.Model ?? "null"}");
        }
    }
}