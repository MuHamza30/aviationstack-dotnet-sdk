// <copyright file="Airport.cs" company="APIMatic">
// Aviationstack.Standard
//
// This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
// </copyright>
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using APIMatic.Core.Utilities.Converters;
using Aviationstack.Standard;
using Aviationstack.Standard.Utilities;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Aviationstack.Standard.Models
{
    /// <summary>
    /// Airport.
    /// </summary>
    public class Airport
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Airport"/> class.
        /// </summary>
        public Airport()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Airport"/> class.
        /// </summary>
        /// <param name="airportName">airport_name.</param>
        /// <param name="iataCode">iata_code.</param>
        /// <param name="icaoCode">icao_code.</param>
        /// <param name="latitude">latitude.</param>
        /// <param name="longitude">longitude.</param>
        /// <param name="geonameId">geoname_id.</param>
        /// <param name="timezone">timezone.</param>
        /// <param name="gmt">gmt.</param>
        /// <param name="phoneNumber">phone_number.</param>
        /// <param name="countryName">country_name.</param>
        /// <param name="countryCode">country_code.</param>
        /// <param name="website">website.</param>
        /// <param name="wikipedia">wikipedia.</param>
        public Airport(
            string airportName = null,
            string iataCode = null,
            string icaoCode = null,
            double? latitude = null,
            double? longitude = null,
            string geonameId = null,
            string timezone = null,
            string gmt = null,
            string phoneNumber = null,
            string countryName = null,
            string countryCode = null,
            string website = null,
            string wikipedia = null)
        {
            this.AirportName = airportName;
            this.IataCode = iataCode;
            this.IcaoCode = icaoCode;
            this.Latitude = latitude;
            this.Longitude = longitude;
            this.GeonameId = geonameId;
            this.Timezone = timezone;
            this.Gmt = gmt;
            this.PhoneNumber = phoneNumber;
            this.CountryName = countryName;
            this.CountryCode = countryCode;
            this.Website = website;
            this.Wikipedia = wikipedia;
        }

        /// <summary>
        /// Name of the airport
        /// </summary>
        [JsonProperty("airport_name", NullValueHandling = NullValueHandling.Ignore)]
        public string AirportName { get; set; }

        /// <summary>
        /// IATA code of the airport
        /// </summary>
        [JsonProperty("iata_code", NullValueHandling = NullValueHandling.Ignore)]
        public string IataCode { get; set; }

        /// <summary>
        /// ICAO code of the airport
        /// </summary>
        [JsonProperty("icao_code", NullValueHandling = NullValueHandling.Ignore)]
        public string IcaoCode { get; set; }

        /// <summary>
        /// Latitude coordinate
        /// </summary>
        [JsonProperty("latitude", NullValueHandling = NullValueHandling.Ignore)]
        public double? Latitude { get; set; }

        /// <summary>
        /// Longitude coordinate
        /// </summary>
        [JsonProperty("longitude", NullValueHandling = NullValueHandling.Ignore)]
        public double? Longitude { get; set; }

        /// <summary>
        /// Geonames ID
        /// </summary>
        [JsonProperty("geoname_id", NullValueHandling = NullValueHandling.Ignore)]
        public string GeonameId { get; set; }

        /// <summary>
        /// Timezone
        /// </summary>
        [JsonProperty("timezone", NullValueHandling = NullValueHandling.Ignore)]
        public string Timezone { get; set; }

        /// <summary>
        /// GMT offset
        /// </summary>
        [JsonProperty("gmt", NullValueHandling = NullValueHandling.Ignore)]
        public string Gmt { get; set; }

        /// <summary>
        /// Phone number
        /// </summary>
        [JsonProperty("phone_number", NullValueHandling = NullValueHandling.Ignore)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Country name
        /// </summary>
        [JsonProperty("country_name", NullValueHandling = NullValueHandling.Ignore)]
        public string CountryName { get; set; }

        /// <summary>
        /// Country code
        /// </summary>
        [JsonProperty("country_code", NullValueHandling = NullValueHandling.Ignore)]
        public string CountryCode { get; set; }

        /// <summary>
        /// Website URL
        /// </summary>
        [JsonProperty("website", NullValueHandling = NullValueHandling.Ignore)]
        public string Website { get; set; }

        /// <summary>
        /// Wikipedia URL
        /// </summary>
        [JsonProperty("wikipedia", NullValueHandling = NullValueHandling.Ignore)]
        public string Wikipedia { get; set; }

        /// <inheritdoc/>
        public override string ToString()
        {
            var toStringOutput = new List<string>();
            this.ToString(toStringOutput);
            return $"Airport : ({string.Join(", ", toStringOutput)})";
        }

        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;

            return obj is Airport other &&
                (this.AirportName == null && other.AirportName == null ||
                 this.AirportName?.Equals(other.AirportName) == true) &&
                (this.IataCode == null && other.IataCode == null ||
                 this.IataCode?.Equals(other.IataCode) == true) &&
                (this.IcaoCode == null && other.IcaoCode == null ||
                 this.IcaoCode?.Equals(other.IcaoCode) == true) &&
                (this.Latitude == null && other.Latitude == null ||
                 this.Latitude?.Equals(other.Latitude) == true) &&
                (this.Longitude == null && other.Longitude == null ||
                 this.Longitude?.Equals(other.Longitude) == true) &&
                (this.GeonameId == null && other.GeonameId == null ||
                 this.GeonameId?.Equals(other.GeonameId) == true) &&
                (this.Timezone == null && other.Timezone == null ||
                 this.Timezone?.Equals(other.Timezone) == true) &&
                (this.Gmt == null && other.Gmt == null ||
                 this.Gmt?.Equals(other.Gmt) == true) &&
                (this.PhoneNumber == null && other.PhoneNumber == null ||
                 this.PhoneNumber?.Equals(other.PhoneNumber) == true) &&
                (this.CountryName == null && other.CountryName == null ||
                 this.CountryName?.Equals(other.CountryName) == true) &&
                (this.CountryCode == null && other.CountryCode == null ||
                 this.CountryCode?.Equals(other.CountryCode) == true) &&
                (this.Website == null && other.Website == null ||
                 this.Website?.Equals(other.Website) == true) &&
                (this.Wikipedia == null && other.Wikipedia == null ||
                 this.Wikipedia?.Equals(other.Wikipedia) == true);
        }

        /// <summary>
        /// ToString overload.
        /// </summary>
        /// <param name="toStringOutput">List of strings.</param>
        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"AirportName = {this.AirportName ?? "null"}");
            toStringOutput.Add($"IataCode = {this.IataCode ?? "null"}");
            toStringOutput.Add($"IcaoCode = {this.IcaoCode ?? "null"}");
            toStringOutput.Add($"Latitude = {(this.Latitude == null ? "null" : this.Latitude.ToString())}");
            toStringOutput.Add($"Longitude = {(this.Longitude == null ? "null" : this.Longitude.ToString())}");
            toStringOutput.Add($"GeonameId = {this.GeonameId ?? "null"}");
            toStringOutput.Add($"Timezone = {this.Timezone ?? "null"}");
            toStringOutput.Add($"Gmt = {this.Gmt ?? "null"}");
            toStringOutput.Add($"PhoneNumber = {this.PhoneNumber ?? "null"}");
            toStringOutput.Add($"CountryName = {this.CountryName ?? "null"}");
            toStringOutput.Add($"CountryCode = {this.CountryCode ?? "null"}");
            toStringOutput.Add($"Website = {this.Website ?? "null"}");
            toStringOutput.Add($"Wikipedia = {this.Wikipedia ?? "null"}");
        }
    }
}